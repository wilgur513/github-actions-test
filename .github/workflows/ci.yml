# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI

on:      
  push:
    branches:
      - 'main'

  pull_request:
    branches: 
      - 'main'
      - 'develop'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Build
      run: ./gradlew bootJar
      
    - name: Test
      run: ./gradlew test

    - name: Set Success Result
      if: ${{ success() }}
      run: echo "result=:large_green_circle:" >> $GITHUB_ENV

    - name: Set Fail Result
      if: ${{ failure() }}
      run: echo "result=:red_circle:" >> $GITHUB_ENV
      
    - name: Get Time
      if: ${{ always() }}
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 9
        format: 'YYYY-MM-DD HH:mm:ss'
        
    - name: Notify To Slack
      if: ${{ always() }}
      id: slack
      uses: slackapi/slack-github-action@v1.18.0
      with:
        payload: |
          {
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":rocket: *CI 피드백 리포트*"
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*날짜 :* ${{ steps.time.outputs.time }}"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*결과 :* ${{ env.result }}"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*링크 :* ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
              },
              {
                "type": "divider"
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
